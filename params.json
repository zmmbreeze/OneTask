{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Onetask","google":"","body":"One task for each browser\r\n===========================\r\n\r\nOneTask is a simple javascript library to make sure a timing task only execute in one page for each browser.\r\n\r\nExample\r\n---------------\r\n\r\nCheck out the index.html\r\n\r\nAPI\r\n--------------\r\n\r\n    var t =  new OneTask(\r\n                'Name',\r\n                function(syncReturn, n1, n2, n3) {\r\n                    // only server page run this function(Task)\r\n                    n1 === 1;\r\n                    n2 === 2;\r\n                    n3 === 3;\r\n                    // syncReturn: return the result of task\r\n                    // result will be serialize to json string\r\n                    syncReturn({\r\n                      'm':'11'\r\n                    });\r\n                },\r\n                {\r\n                    interval: 30000,        // interval of task\r\n                    serverTimeout: 1000,    // timeout of server\r\n                    params: [1,2,3]         // task params\r\n                }\r\n            );\r\n    // cancel the task, and can't start again\r\n    t.cancel();\r\n    // start the task\r\n    t.start();\r\n    // temporarily stop the task\r\n    t.stop();\r\n    // regist callback，which runs after the task\r\n    // parameter of callback is the result of task\r\n    t.onCallBack(function(data) {\r\n      this === t;\r\n      data.m === 11;\r\n    });\r\n    // regist callback，which runs when the result change\r\n    // parameter of callback is the result of task\r\n    t.onChangeCallBack(function(data) {\r\n      this === t;\r\n      data.m === 11;\r\n    });\r\n\r\n    NOTE: if the result of task is null, it means task is not ready. It's not a right result, don't use it;\r\n","tagline":"One task for each browser"}